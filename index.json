[{"content":"","date":"26 February 2025","externalUrl":null,"permalink":"/tags/aws/","section":"Tags","summary":"","title":"Aws","type":"tags"},{"content":"","date":"26 February 2025","externalUrl":null,"permalink":"/tags/bedrock/","section":"Tags","summary":"","title":"Bedrock","type":"tags"},{"content":"","date":"26 February 2025","externalUrl":null,"permalink":"/tags/claude/","section":"Tags","summary":"","title":"Claude","type":"tags"},{"content":"","date":"26 February 2025","externalUrl":null,"permalink":"/tags/cli/","section":"Tags","summary":"","title":"Cli","type":"tags"},{"content":"","date":"26 February 2025","externalUrl":null,"permalink":"/","section":"Krzysztof's Site","summary":"","title":"Krzysztof's Site","type":"page"},{"content":"","date":"26 February 2025","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"26 February 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":" Note: This entire blog post, including the thumbnail image, was generated using Claude Code CLI.\nClaude Code is a powerful CLI tool that allows you to interact with Claude AI models directly from your terminal. This guide will walk you through setting up Claude Code to work with Amazon Bedrock as the backend provider.\nPrerequisites # AWS account with Bedrock access Claude Code CLI installed AWS CLI configured with appropriate permissions Setup Steps # Install Claude Code CLI\nnpm install -g @anthropic-ai/claude-code Configure AWS credentials\nEnsure your AWS credentials are properly configured:\naws configure 2.5. For AWS employees using Isengard\nIf you\u0026rsquo;re an Amazon/AWS employee using Isengard accounts, you can set your credentials with:\nisengardcli assume Set environment variables\nConfigure the following environment variables for optimal Bedrock integration:\n# Claude CLI export DISABLE_PROMPT_CACHING=1 export ANTHROPIC_MODEL=\u0026#39;anthropic.claude-3-7-sonnet-20250219-v1:0\u0026#39; export CLAUDE_CODE_USE_BEDROCK=1 For persistent use, add these exports to your shell configuration file (~/.bashrc, ~/.zshrc, or ~/.config/fish/config.fish depending on your shell).\nUsing Claude Code with Bedrock # Claude Code has access to the directory where it\u0026rsquo;s executed, allowing it to analyze your project files, understand your codebase, and assist with development tasks. It can guide you through complex processes by suggesting next steps and requesting permission before running commands that modify your files or system.\nThis means you can use Claude to help build entire projects, solve complex coding challenges, or fix bugs by giving it context about your codebase. Claude will analyze the relevant files and provide step-by-step assistance, asking for confirmation before taking actions that might alter your system or files.\nOnce configured, you can start using Claude Code with commands like:\n# Ask Claude a question claude \u0026#34;How do I optimize Docker images?\u0026#34; # Run Claude in interactive mode claude # Run Claude with context from a specific file claude --context path/to/file.py \u0026#34;Explain this code\u0026#34; # Use Claude to help debug an error message claude --context error_log.txt \u0026#34;How do I fix this error?\u0026#34; # Generate code based on requirements claude \u0026#34;Write a Python script that reads CSV files and outputs JSON\u0026#34; # Review and explain complex code claude --context complex_module.js \u0026#34;Explain how this module works\u0026#34; # Analyze logs or data claude --context application.log \u0026#34;Summarize these logs and identify issues\u0026#34; # Help with Git operations claude \u0026#34;How do I rebase my feature branch onto main and resolve conflicts?\u0026#34; # Multiple contexts for more comprehensive analysis claude --context file1.js --context file2.js \u0026#34;How do these two files interact?\u0026#34; # Use Claude for infrastructure as code help claude --context terraform.tf \u0026#34;Optimize this Terraform configuration\u0026#34; Benefits of Using Bedrock Backend # Data privacy - your queries stay within your AWS environment Cost management through AWS billing Access control through IAM policies Lower latency (depending on region configuration) Troubleshooting # If you encounter issues, verify:\nYour AWS credentials have Bedrock access permissions The Claude model you selected is enabled in your Bedrock account Your AWS region is configured correctly For more information, check the Claude Code documentation or the AWS Bedrock documentation.\nMeta: How This Post Was Created # This entire blog post, including the featured image, was created using Claude Code CLI in interactive mode. Here\u0026rsquo;s the process:\nThe initial content was generated through a conversation with Claude Code, initiated with the prompt \u0026ldquo;let\u0026rsquo;s add a blog entry describing how to use claude code with bedrock backend\u0026rdquo;\nAll modifications, refinements, and additions to the content were made solely through prompts to Claude Code - the author never directly edited any files\nThe featured image was created entirely through Claude Code:\nClaude suggested ImageMagick commands to generate the base image It created a gradient background, added text elements, AWS Bedrock logo, and symbolic graphics Claude handled image resizing and optimization for web display All image manipulations were performed through commands suggested by Claude and executed with user permission This workflow demonstrates the power of Claude Code as a complete content creation assistant. The author provided only directional input through conversation, while Claude handled all file creation, editing, and image processing tasks. This showcases the practical application of AI-assisted content creation using Claude Code with the AWS Bedrock backend for production-ready output.\n","date":"26 February 2025","externalUrl":null,"permalink":"/posts/using-claude-code-with-bedrock/","section":"Posts","summary":"","title":"Using Claude Code with Bedrock Backend","type":"posts"},{"content":"","date":"21 February 2025","externalUrl":null,"permalink":"/tags/about/","section":"Tags","summary":"","title":"About","type":"tags"},{"content":" Hello World, I\u0026rsquo;m Krzysztof! üëã # Hey, my name is Krzysztof! You can call me Chris if it‚Äôs easier for you - Krzysztof is just \u0026lsquo;Christopher\u0026rsquo; written in a funky Polish way. üòâ\nI\u0026rsquo;m a DevOps Engineer currently working for AWS (Amazon Web Services) Professional Services. In my day to day work, I\u0026rsquo;m assisting AWS\u0026rsquo; largest customers on their cloud journey with both my technical (coding, architecting) and consulting skills.\nIn my \u0026ldquo;past live\u0026rdquo;, I\u0026rsquo;ve been a robotics engineer. I have switched to IT after being involved in Industrial Internet of Things / Physics High Performance Computing projects in my previous work experience.\nüíº Work stuff # I\u0026rsquo;m a DevOps Consultant at AWS Professional Services Global Competency Center in Warsaw! üáµüá±\nIn my current role - as a DevOps engineer, I‚Äôm helping AWS‚Äô largest customers on their journey to the cloud. Usually, I‚Äôm developing Serverless backend software (mostly in Python), designing Infrastructure as Code (CF \u0026amp; SAM / TF / CDK) with a strong accent on Security (preventive and reactive controls, DevSecOps).\nMy superpower is insisting on the highest standards in software development teams. By highest standards, I mean both the way of working (DevSecOps culture) and technical excellence - building production-ready, safe and operations-friendly products.\nüïî Private stuff # I‚Äôm passionate about music - I love to explore different aspects of it (theory, genres, folk etc) and discuss / exchange discoveries with my peers. I spend most of my free time playing my guitars \u0026amp; piano, tinkering with my 3D printers or writing some code for my pet projects.\nAs you might have already guessed, I‚Äôm a big nerd. ü§ì\nüìú Certification flex (yeah I know..) # I love learning new things, here are some certifications / skill badges that I\u0026rsquo;ve earned!\n‚òÅÔ∏è Amazon Web Services (AWS) # ‚ö° Scaled Agile (SAFe) # ","date":"21 February 2025","externalUrl":null,"permalink":"/about/author/","section":"Abouts","summary":"","title":"About Me","type":"about"},{"content":"This page was made with Hugo and Blowfish.\nTODO: add a descriptn how this site is built / reference it\u0026rsquo;s source\n","date":"21 February 2025","externalUrl":null,"permalink":"/about/page/","section":"Abouts","summary":"","title":"About This Site","type":"about"},{"content":"","date":"21 February 2025","externalUrl":null,"permalink":"/about/","section":"Abouts","summary":"","title":"Abouts","type":"about"},{"content":"","date":"21 February 2025","externalUrl":null,"permalink":"/tags/author/","section":"Tags","summary":"","title":"Author","type":"tags"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]